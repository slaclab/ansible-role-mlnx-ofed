# we only install if this command failed, but we should probably do some other checks like ofed and kernel version requirements etc
- name: Check for mlnx OFED devices
  shell: ibv_devices | grep mlx
  register: mlnx_up
  ignore_errors: True
  changed_when: mlnx_up|bool

- name: Gather installed mlnx OFED version
  shell: ofed_info -s
  ignore_errors: True
  register: installed_mlnx

- name: "Check installed mlnx OFED version {{ installed_mlnx.stdout | regex_replace(':','') }} against {{ mlnx_ofed_version }}" 
  set_fact:
    upgrade_mlnx: "{{ 'false' if installed_mlnx.stdout.replace(':','') == mlnx_ofed_version else 'true' }}"

- name: "check ofa_kernel installation"
  stat:
    path: '/usr/src/ofa_kernel/default'
  register: ofa_kernel

- name: 'setup ofa_kernel paths'
  set_fact:
    upgrade_ofa_kernel: 'false'

- name: 'ofa_kernel needs update'
  set_fact:
    upgrade_ofa_kernel: 'true'
  when: not kernel_version in ofa_kernel.stat.lnk_source 

- name: upgrade information
  debug:
    msg: "mlnx ofed currently installed? {{ not mlnx_up.failed }}, allow upgrade? {{ mlnx_ofed_upgrade }}, upgrade_mlnx required? {{ upgrade_mlnx }}, update_ofa_kernel required {{ upgrade_ofa_kernel }}"

- include: RedHat-tarball.yaml
  when:
  - ansible_os_family == "RedHat"
  - mlnx_up.failed or ( mlnx_ofed_upgrade and ( upgrade_mlnx or upgrade_ofa_kernel ) )

- name: "Configure and start openibd service"
  service:
    name: openibd
    state: started
    enabled: yes
#  when:
#  - mlnx_up.failed or ( mlnx_ofed_upgrade and upgrade_mlnx )

- name: Check mlnx OFED installed
  shell: ibv_devices | grep mlx
  register: mlnx_up
  # changed_when: mlnx_up|bool

